Centerdash-pattern.py

 
import RPi.GPIO as GPIO
import time
import keyboard

GPIO.setmode(GPIO.BCM)
GPIO.setwarnings(False)
GPIO.setup(5,GPIO.OUT)
GPIO.setup(6,GPIO.OUT)
GPIO.setup(13,GPIO.OUT)
GPIO.setup(19,GPIO.OUT)
GPIO.setup(26,GPIO.OUT)
list=[5,6,13,19,26]
print "Press q to Exit"
while True:
 if keyboard.is_pressed('q'):
    break;
  for num in range((len(list) / 2)+1):
	GPIO.output(list[num],GPIO.HIGH)
	GPIO.output(list[len(list)-num-1],GPIO.HIGH)
	time.sleep(0.05)
	GPIO.output(list[num],GPIO.LOW)
	GPIO.output(list[len(list)-num-1],GPIO.LOW)
	time.sleep(0.05)
 GPIO.output(5,GPIO.LOW)
 GPIO.output(6,GPIO.LOW)
 GPIO.output(13,GPIO.LOW)
 GPIO.output(19,GPIO.LOW)
 GPIO.output(26,GPIO.LOW)
 GPIO.cleanup()


Pingpong-pattern.py
import RPi.GPIO as GPIO
import time
import keyboard

GPIO.setmode(GPIO.BCM)
GPIO.setwarnings(False)
GPIO.setup(5,GPIO.OUT)
GPIO.setup(6,GPIO.OUT)
GPIO.setup(13,GPIO.OUT)
GPIO.setup(19,GPIO.OUT)
GPIO.setup(26,GPIO.OUT)
list=[5,6,13,19,26]
print "Press q to Exit"
while True:
        if keyboard.is_pressed('q'):
            break;
    	for num in range(len(list)):
		GPIO.output(list[num],GPIO.HIGH)
		time.sleep(0.05)
		GPIO.output(list[num],GPIO.LOW)
		time.sleep(0.05)
	for num in range(len(list)):
GPIO.output(list[len(list) - num - 1], GPIO.HIGH)
	time.sleep(0.05)
GPIO.output(list[len(list) - num - 1], GPIO.LOW)
	time.sleep(0.05)
GPIO.output(5,GPIO.LOW)
GPIO.output(6,GPIO.LOW)
GPIO.output(13,GPIO.LOW)
GPIO.output(19,GPIO.LOW)
GPIO.output(26,GPIO.LOW)
GPIO.cleanup()


Pwm-pattern.py
import RPi.GPIO as GPIO
import time
import keyboard

GPIO.setmode(GPIO.BCM)
GPIO.setwarnings(False)
GPIO.setup(5,GPIO.OUT)
GPIO.setup(6,GPIO.OUT)
GPIO.setup(13,GPIO.OUT)
GPIO.setup(19,GPIO.OUT)
GPIO.setup(26,GPIO.OUT)
print "Press q to Exit"
p1 = GPIO.PWM(5, 50)  # channel=5 frequency=50Hz
p2 = GPIO.PWM(6, 50)  # channel=6 frequency=50Hz
p3 = GPIO.PWM(13, 50)  # channel=13 frequency=50Hz
p4 = GPIO.PWM(19, 50)  # channel=19 frequency=50Hz
p5 = GPIO.PWM(26, 50)  # channel=26 frequency=50Hz
p1.start(0)
p2.start(0)
p3.start(0)
p4.start(0)
p5.start(0)
try:
    while True:
        if keyboard.is_pressed('q'):
            break;
        
        for dc in range(0, 101, 5):
            p1.ChangeDutyCycle(dc)
            p2.ChangeDutyCycle(dc)
            p3.ChangeDutyCycle(dc)
            p4.ChangeDutyCycle(dc)
            p5.ChangeDutyCycle(dc)
            time.sleep(0.025)
        for dc in range(100, -1, -5):
            p1.ChangeDutyCycle(dc)
            p2.ChangeDutyCycle(dc)
            p3.ChangeDutyCycle(dc)
            p4.ChangeDutyCycle(dc)
            p5.ChangeDutyCycle(dc)
            time.sleep(0.025)
except KeyboardInterrupt:
    pass
p1.stop()
p2.stop()
p3.stop()
p4.stop()
p5.stop()
GPIO.output(5,GPIO.LOW)
GPIO.output(6,GPIO.LOW)
GPIO.output(13,GPIO.LOW)
GPIO.output(19,GPIO.LOW)
GPIO.output(26,GPIO.LOW)
GPIO.cleanup()





Running-pattern.py

import RPi.GPIO as GPIO
import time
import keyboard

GPIO.setmode(GPIO.BCM)
GPIO.setwarnings(False)
GPIO.setup(5,GPIO.OUT)
GPIO.setup(6,GPIO.OUT)
GPIO.setup(13,GPIO.OUT)
GPIO.setup(19,GPIO.OUT)
GPIO.setup(26,GPIO.OUT)
list=[5,6,13,19,26]
print "Press q to Exit"
try:
    while True:
        if keyboard.is_pressed('q'):
          break;
        for num in range(len(list)):
            GPIO.output(list[num],GPIO.HIGH)
	    time.sleep(0.05)
	    GPIO.output(list[num],GPIO.LOW)
	    time.sleep(0.05)
except KeyboardInterrupt:
    pass
GPIO.output(5,GPIO.LOW)
GPIO.output(6,GPIO.LOW)
GPIO.output(13,GPIO.LOW)
GPIO.output(19,GPIO.LOW)
GPIO.output(26,GPIO.LOW)
GPIO.cleanup()


Seg.py

import RPi.GPIO as GPIO
import time

GPIO.setmode(GPIO.BCM)
GPIO.setwarnings(False)

#GPIO.setup(4, GPIO.IN, pull_up_down=GPIO.PUD_DOWN)
segments = (17,27,22,23,24,25,5,6)

for segment in segments:
    GPIO.setup(segment, GPIO.OUT)
    GPIO.output(segment, 1)
digits = (16,20,21,12)

for digit in digits:
    GPIO.setup(digit, GPIO.OUT)
    GPIO.output(digit, 1)

num = {' ':(0,0,0,0,0,0,0),
    '0':(1,1,1,1,1,1,0),
    '1':(0,1,1,0,0,0,0),
    '2':(1,1,0,1,1,0,1),
    '3':(1,1,1,1,0,0,1),
    '4':(0,1,1,0,0,1,1),
    '5':(1,0,1,1,0,1,1),
    '6':(1,0,1,1,1,1,1),
    '7':(1,1,1,0,0,0,0),
    '8':(1,1,1,1,1,1,1),
    '9':(1,1,1,1,0,1,1)}

try:
    while True:
        n = time.ctime()[11:13]+time.ctime()[14:16]
        s = str(n).rjust(4)
        for digit in range(4):
            for loop in range(0,7):
                if num[s[digit]][loop] == 0:
                    GPIO.output(segments[loop], 1)
                else:
                    GPIO.output(segments[loop], 0)
                if (int(time.ctime()[18:19])%2 == 0) and (digit == 1):
                    GPIO.output(6, 0)
                else:
                    GPIO.output(6, 1)
                    
            GPIO.output(digits[digit], 1)
            time.sleep(0.001)
            GPIO.output(digits[digit], 0)

except KeyboardInterrupt:
    GPIO.cleanup()
